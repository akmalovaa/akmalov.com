"use strict";(self.webpackChunkakmalov_com=self.webpackChunkakmalov_com||[]).push([[2634],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>d});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var o=a.createContext({}),p=function(e){var t=a.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},g="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),g=p(r),c=n,d=g["".concat(o,".").concat(c)]||g[c]||m[c]||l;return r?a.createElement(d,i(i({ref:t},u),{},{components:r})):a.createElement(d,i({ref:t},u))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,i=new Array(l);i[0]=c;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[g]="string"==typeof e?e:n,i[1]=s;for(var p=2;p<l;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},6103:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var a=r(7462),n=(r(7294),r(3905));const l={slug:"gitlab-auto-reviewers",title:"Gitlab auto add reviewers",description:"Gitlab auto assign reviewer for merge request",image:"./gitlab-reviewers.png",tags:["gitlab","devops","bash","python"],date:new Date("2023-05-30T00:00:00.000Z")},i=void 0,s={permalink:"/blog/gitlab-auto-reviewers",editUrl:"https://github.com/akmalovaa/akmalov.com/tree/main/blog/gitlab-auto-reviewers/index.md",source:"@site/blog/gitlab-auto-reviewers/index.md",title:"Gitlab auto add reviewers",description:"Gitlab auto assign reviewer for merge request",date:"2023-05-30T00:00:00.000Z",formattedDate:"30 \u043c\u0430\u044f 2023 \u0433.",tags:[{label:"gitlab",permalink:"/blog/tags/gitlab"},{label:"devops",permalink:"/blog/tags/devops"},{label:"bash",permalink:"/blog/tags/bash"},{label:"python",permalink:"/blog/tags/python"}],readingTime:2.545,hasTruncateMarker:!0,authors:[],frontMatter:{slug:"gitlab-auto-reviewers",title:"Gitlab auto add reviewers",description:"Gitlab auto assign reviewer for merge request",image:"./gitlab-reviewers.png",tags:["gitlab","devops","bash","python"],date:"2023-05-30T00:00:00.000Z"},prevItem:{title:"Docusaurus \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438",permalink:"/blog/docusaurus-comments"},nextItem:{title:"\u041c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433 \u0434\u043b\u044f \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u043d\u043e\u0433\u043e \u043a\u043b\u0443\u0431\u0430",permalink:"/blog/monitoring-pc-club"}},o={image:r(8866).Z,authorsImageUrls:[]},p=[{value:"Gitlab auto add reviewers",id:"gitlab-auto-add-reviewers",level:2},{value:"1. Reviewer templates",id:"1-reviewer-templates",level:2},{value:"\u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430",id:"\u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430",level:3},{value:"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435",id:"\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435",level:3},{value:"2. Bash gitlab API",id:"2-bash-gitlab-api",level:2},{value:"\u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430",id:"\u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430-1",level:3},{value:"\u0421\u043a\u0440\u0438\u043f\u0442",id:"\u0441\u043a\u0440\u0438\u043f\u0442",level:3},{value:"3. Python gitlab API",id:"3-python-gitlab-api",level:2}],u={toc:p},g="wrapper";function m(e){let{components:t,...l}=e;return(0,n.kt)(g,(0,a.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Gitlab auto assign reviewer \u2014 \u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043f\u043e\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 assignee \u0438 reviewers \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 mergre request"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/blog/gitlab-auto-reviewers"},(0,n.kt)("img",{alt:"nginx logo",src:r(8866).Z,width:"1500",height:"500"}))),(0,n.kt)("h2",{id:"gitlab-auto-add-reviewers"},"Gitlab auto add reviewers"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"\u0426\u0435\u043b\u044c"),": \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 Merge Request \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0443\u0434\u043e\u0431\u043d\u043e\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0440\u0435\u0432\u044c\u044e\u0432\u0435\u0440\u043e\u0432"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"mr reviewers",src:r(3815).Z,title:"mr reviewers",width:"1292",height:"750"})),(0,n.kt)("h2",{id:"1-reviewer-templates"},"1. Reviewer templates"),(0,n.kt)("p",null,"\u041f\u0435\u0440\u0432\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u043c\u043e\u0436\u0435\u0442 \u0432 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u0440\u0435\u0432\u044c\u044e\u0432\u0435\u0440\u043e\u0432 - \u044d\u0442\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 templates. \u0412\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u0430\u044f \u0444\u0438\u0447\u0430 Gitlab, \u0431\u0435\u0441\u043f\u043b\u0430\u0442\u043d\u0430\u044f \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0432\u0435\u0440\u0441\u0438\u0439."),(0,n.kt)("p",null,"\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f - ",(0,n.kt)("a",{parentName:"p",href:"https://docs.gitlab.com/ee/user/project/description_templates.html"},"Description templates")),(0,n.kt)("h3",{id:"\u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430"},"\u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430"),(0,n.kt)("p",null,"\u041d\u0443\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e ",(0,n.kt)("inlineCode",{parentName:"p"},".gitlab/merge_request_templates")),(0,n.kt)("p",null,"\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0432\u043d\u0443\u0442\u0440\u0438 \u043b\u044e\u0431\u043e\u0439 \u0444\u0430\u0439\u043b \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f ",(0,n.kt)("inlineCode",{parentName:"p"},".md")),(0,n.kt)("p",null,"\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 ",(0,n.kt)("inlineCode",{parentName:"p"},"top_reviewers.md")),(0,n.kt)("p",null,"\u0421 \u0442\u0430\u043a\u0438\u043c \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435\u043c, \u0433\u0434\u0435 \u043d\u0443\u0436\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c username \u0440\u0435\u0432\u044c\u044e\u0432\u0435\u0440\u043e\u0432:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"/assign_reviewer @user1 @user2\n")),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"gitlab template",src:r(1860).Z,title:"gitlab template",width:"1283",height:"328"})),(0,n.kt)("h3",{id:"\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435"},"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435"),(0,n.kt)("p",null,"\u041f\u043e\u0441\u043b\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0442\u0430\u043a\u043e\u0433\u043e template, \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043d\u043e\u0432\u044b\u0445 MR \u043f\u043e\u044f\u0432\u0438\u0442\u0441\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u043f\u043e\u043b\u0435, \u0433\u0434\u0435 \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0435 \u0448\u0430\u0431\u043b\u043e\u043d\u044b"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"gitlab template",src:r(3041).Z,title:"gitlab template",width:"1413",height:"756"})),(0,n.kt)("p",null,"\u0423\u0434\u043e\u0431\u043d\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431, \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0435\u0441\u043b\u0438 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0437\u043d\u044b\u0445 \u0433\u0440\u0443\u043f\u043f \u0440\u0435\u0432\u0431\u044e\u0432\u0435\u0440\u043e\u0432, \u043c\u043e\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0447\u0430\u0441\u0442\u044b\u0445 \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432 \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0438\u0445."),(0,n.kt)("h2",{id:"2-bash-gitlab-api"},"2. Bash gitlab API"),(0,n.kt)("p",null,"\u0414\u0430\u043d\u043d\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431 - \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u0430 \u0432 ",(0,n.kt)("inlineCode",{parentName:"p"},".gitlab-ci.yml")," CI/CD, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u0437\u0432\u043e\u043b\u0438\u0442 \u0447\u0435\u0440\u0435\u0437 API \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0440\u0435\u0432\u044c\u044e\u0432\u0435\u0440\u043e\u0432"),(0,n.kt)("h3",{id:"\u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430-1"},"\u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430"),(0,n.kt)("p",null,"\u0414\u043b\u044f \u043e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u043d\u0438\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f merge request \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0440\u0430\u0437\u043d\u044b\u0435 \u0441\u043e\u0431\u044b\u0442\u0438\u044f(\u0442\u0440\u0438\u0433\u0433\u0435\u0440\u044b):"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Gitlab CI workflow event"),(0,n.kt)("li",{parentName:"ul"},"Schedules"),(0,n.kt)("li",{parentName:"ul"},"\u041f\u0440\u043e\u0447\u0438\u0435 \u0441\u043e\u0431\u044b\u0442\u0438\u044f")),(0,n.kt)("p",null,"\u042f \u0431\u0443\u0434\u0443 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c ",(0,n.kt)("inlineCode",{parentName:"p"},"workflow \u2014 merge request event"),", \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u043b \u0432 ",(0,n.kt)("strong",{parentName:"p"},"workflow")," \u0442\u0440\u0438\u0433\u0433\u0435\u0440 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 MR:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-YAML"},'workflow:\n  rules:\n    - if: $CI_PIPELINE_SOURCE == "merge_request_event"\n')),(0,n.kt)("p",null,"\u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 ",(0,n.kt)("strong",{parentName:"p"},"Settings -> CI/CD -> Variables")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"$TOKEN")," - Gitlab API Token ")),(0,n.kt)("p",null,"\u0412 gitlab runner \u0433\u0434\u0435 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f pipeline \u043d\u0443\u0436\u0435\u043d jq\n\u0417\u0430\u0440\u0430\u043d\u0435\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u044b\u0439 \u0438\u043b\u0438 \u0434\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043f\u0435\u0440\u0435\u0434 \u0437\u0430\u043f\u0443\u0441\u043a\u043e\u043c \u0441\u043a\u0440\u0438\u043f\u0442\u0430:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-YAML"},"before_script:\n  - apt-get install jq -y\n")),(0,n.kt)("h3",{id:"\u0441\u043a\u0440\u0438\u043f\u0442"},"\u0421\u043a\u0440\u0438\u043f\u0442"),(0,n.kt)("p",null,"\u041f\u043e\u0448\u0430\u0433\u043e\u0432\u0430\u044f \u043b\u043e\u0433\u0438\u043a\u0430 \u0441\u043a\u0440\u0438\u043f\u0442\u0430:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 merge request ID"),(0,n.kt)("li",{parentName:"ul"},"\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c ID \u0430\u0432\u0442\u043e\u0440\u0430 merge request"),(0,n.kt)("li",{parentName:"ul"},"\u041d\u0430\u0437\u043d\u0430\u0447\u0438\u0442\u044c Assigne = ID \u0410\u0432\u0442\u043e\u0440\u0430"),(0,n.kt)("li",{parentName:"ul"},"\u041d\u0430\u0437\u043d\u0430\u0447\u0438\u0442\u044c Reviewers = \u0438\u0437 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439  Reviewers(list)")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-YAML"},'variables:\n    PROJECT_URL: \'https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/merge_requests\'\n    REVIEWERS: \'10043654\' # Reviewers Gitlab ID List\n\n.gitlab_add_assignee_reviewers:\n  stage: set up merge request\n  script:\n    - read LAST_MR_ID < <(curl --header "PRIVATE-TOKEN:$TOKEN" "$PROJECT_URL" | jq \'.[0] | .iid\')\n    - read MR_AUTHOR < <(curl --header "PRIVATE-TOKEN:$TOKEN" "$PROJECT_URL/$LAST_MR_ID" | jq \'.author | .id\')\n    # add assignee\n    - curl -s --request PUT --header "PRIVATE-TOKEN:$TOKEN" "$PROJECT_URL/$LAST_MR_ID" --form "assignee_ids=$MR_AUTHOR" | jq \'.assignees\'\n    # add reviewers\n    - curl -s --request PUT --header "PRIVATE-TOKEN:$TOKEN" "$PROJECT_URL/$LAST_MR_ID" --form "reviewer_ids=$REVIEWERS"\n')),(0,n.kt)("h2",{id:"3-python-gitlab-api"},"3. Python gitlab API"),(0,n.kt)("p",null,"\u0414\u0430\u043d\u043d\u044b\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u0431\u043e\u043b\u0435\u0435 \u0433\u0438\u0431\u043a\u0438\u0439 \u0438 \u0443\u0434\u043e\u0431\u043d\u044b\u0439 \u0432 \u043f\u043b\u0430\u043d\u0435 \u0434\u043e\u0440\u0430\u0431\u043e\u0442\u043e\u043a \u043f\u043e\u0434 \u0440\u0430\u0437\u043d\u044b\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f.\n\u0415\u0441\u0442\u044c \u0442\u0430\u043a \u0436\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c \u043a\u0430\u043a python script \u0432 ",(0,n.kt)("inlineCode",{parentName:"p"},"gitlab-ci")),(0,n.kt)("p",null,"\u041f\u043e\u043b\u043d\u044b\u0439 \u043a\u043e\u0434 \u043d\u0430 ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/akmalovaa/gitlab-auto-add-reviewers/tree/master/Python"},"github")),(0,n.kt)("p",null,"Python/settings.py"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-Python"},"GITLAB_API_ADDR = '<https://gitlab.com>'    # Your Gitlab URL\nGITLAB_TOKEN='YOUR GITLAB API TOKEN'        # API Token use import .env\nGITLAB_ROOT_GROUP = ''                      # Root Group optional\nGITLAB_REVIEWERS: list = [10043654]         # Gitlab Reviewrs ID\n")),(0,n.kt)("p",null,"Python/main.py"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-Python"},'import gitlab\nimport settings\nimport typing\n\ngl = gitlab.Gitlab(settings.GITLAB_API_ADDR, private_token=settings.GITLAB_TOKEN)\n\n\ndef get_last_merge_requests() -> None:\n    """ Get last merg request """\n    if settings.GITLAB_ROOT_GROUP == \'\':\n        all_mr: typing.Any = gl.mergerequests.list(state="opened")\n    else:\n        all_mr: typing.Any = gl.groups.get(settings.GITLAB_ROOT_GROUP).mergerequests.list(state="opened")\n    try:\n        last_mr: gitlab.v4.objects.merge_requests.MergeRequest = all_mr[0]\n    except IndexError:\n        print("Merge requests - Not found")\n        return\n    _auto_add_responsible(last_mr)\n\n\ndef _auto_add_responsible(mr: gitlab.v4.objects.merge_requests.GroupMergeRequest) -> None:\n    project: gitlab.v4.objects.projects.Project = gl.projects.get(\n        mr.project_id, lazy=True\n    )\n    editable_mr: gitlab.v4.objects.merge_requests.ProjectMergeRequest = (\n        project.mergerequests.get(mr.iid, lazy=True)\n    )\n    editable_mr.assignee_id = mr.author["id"]\n    editable_mr.reviewer_ids = settings.GITLAB_REVIEWERS\n    print(editable_mr)\n    editable_mr.save()\n\n\nif __name__ == "__main__":\n    get_last_merge_requests()\n')),(0,n.kt)("p",null,"example for ",(0,n.kt)("inlineCode",{parentName:"p"},".gitlab-ci.yml")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-YAML"},".python_add_reviewers:\n  script:\n    - pip install virtualenv\n    - virtualenv venv\n    - source venv/bin/activate\n    - pip install -r Python/requirements.txt\n    - python Python/main.py\n")))}m.isMDXComponent=!0},3041:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/gitlab-mr-template-44098fae936bf6b74d5cfb6958c9e6e1.png"},8866:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/gitlab-reviewers-c3e4e494b3c1598ca2d3333cd210227a.png"},1860:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/gitlab-template-a81aa1e33546eba521e392c74d5b96c0.png"},3815:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/mr-f18b428bbad8907030149a86c8b83e1f.png"}}]);