"use strict";(self.webpackChunkakmalov_com=self.webpackChunkakmalov_com||[]).push([[6852],{884:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>d});const c=JSON.parse('{"id":"misc/docker","title":"Docker","description":"- Docker Hub","source":"@site/docs/misc/docker.md","sourceDirName":"misc","slug":"/misc/docker","permalink":"/docs/misc/docker","draft":false,"unlisted":false,"editUrl":"https://github.com/akmalovaa/akmalov.com/tree/main/docs/misc/docker.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Docker"},"sidebar":"tutorialSidebar","previous":{"title":"Misc","permalink":"/docs/category/misc"},"next":{"title":"Helm","permalink":"/docs/misc/helm"}}');var s=r(4848),o=r(8453);const i={sidebar_position:2,title:"Docker"},l="Docker",a={},d=[{value:"Commands",id:"commands",level:2},{value:"Build args",id:"build-args",level:3},{value:"Docker run rm exec",id:"docker-run-rm-exec",level:3},{value:"Docker overlay who use (need install jq)",id:"docker-overlay-who-use-need-install-jq",level:3},{value:"Docker image size",id:"docker-image-size",level:3},{value:"Docker cp",id:"docker-cp",level:3},{value:"Retag for own registory",id:"retag-for-own-registory",level:3},{value:"Docker compose dump run",id:"docker-compose-dump-run",level:3},{value:"Docker context remote",id:"docker-context-remote",level:3},{value:"Logging",id:"logging",level:2},{value:"\u041f\u0440\u0438\u043c\u0435\u0440 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438",id:"\u043f\u0440\u0438\u043c\u0435\u0440-\u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438",level:3},{value:"Docker \u043f\u043b\u0430\u0433\u0438\u043d \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f",id:"docker-\u043f\u043b\u0430\u0433\u0438\u043d-\u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f",level:3}];function t(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"docker",children:"Docker"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://hub.docker.com/",children:"Docker Hub"})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"\u0417\u0435\u0440\u043a\u0430\u043b\u043e docker hub \u0435\u0441\u043b\u0438 \u0435\u0441\u0442\u044c \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f \u0438\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b \u0441 \u0434\u043e\u0441\u0442\u0443\u043f\u043e\u043c"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"mirror.gcr.io/traefik:3.5.0\n"})}),"\n",(0,s.jsx)(n.h2,{id:"commands",children:"Commands"}),"\n",(0,s.jsx)(n.p,{children:"\u0427\u0430\u0441\u0442\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b"}),"\n",(0,s.jsx)(n.p,{children:"Fast install docker"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"apt update && apt upgrade -y && apt install curl\ncurl -fsSL https://get.docker.com -o get-docker.sh\nsudo sh get-docker.sh\n"})}),"\n",(0,s.jsx)(n.p,{children:"Docker run exec or have entry point use: --entry-point=/bin/bash"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker run --rm -it image-name sh\n"})}),"\n",(0,s.jsx)(n.h3,{id:"build-args",children:"Build args"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker build . -t myimage --build-arg USER=$USER --build-arg PASSWORD=$PASSWORD\n"})}),"\n",(0,s.jsx)(n.h3,{id:"docker-run-rm-exec",children:"Docker run rm exec"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker run --rm -it tg_webhook_exporter bash\n"})}),"\n",(0,s.jsx)(n.h3,{id:"docker-overlay-who-use-need-install-jq",children:"Docker overlay who use (need install jq)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:" docker inspect $(docker ps -qa) |  jq -r 'map([.Name, .GraphDriver.Data.MergedDir]) | .[] | \"\\(.[0])\\t\\(.[1])\"'\n"})}),"\n",(0,s.jsx)(n.h3,{id:"docker-image-size",children:"Docker image size"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker ps --format '{{.Names}}\\n{{.Image}}:{{.Size}}\\n' -s\n"})}),"\n",(0,s.jsx)(n.h3,{id:"docker-cp",children:"Docker cp"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker cp <containerId>:/file/path/within/container /host/path/target\n"})}),"\n",(0,s.jsx)(n.h3,{id:"retag-for-own-registory",children:"Retag for own registory"}),"\n",(0,s.jsx)(n.p,{children:"\u0421\u043a\u0430\u0447\u0430\u0442\u044c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0439 image docker pull"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker pull nginx:1.23.1\n"})}),"\n",(0,s.jsx)(n.p,{children:"\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c tag"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker tag nginx:1.23.1 registry.gitlab.example.com/test/nginx:1.23.1\n"})}),"\n",(0,s.jsx)(n.p,{children:"Push \u0432 \u0441\u0432\u043e\u0439 registry"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker push registry.gitlab.example.com/test/nginx:1.23.1\n"})}),"\n",(0,s.jsx)(n.h3,{id:"docker-compose-dump-run",children:"Docker compose dump run"}),"\n",(0,s.jsx)(n.p,{children:"\u0417\u0430\u043f\u0443\u0441\u043a \u0442\u0443\u043f\u043e\u0439 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0447\u0442\u043e\u0431 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u043d\u0435 \u043f\u0430\u0434\u0430\u043b, \u0438\u043d\u043e\u0433\u0434\u0430 \u0431\u044b\u0432\u0430\u0435\u0442 \u043d\u0443\u0436\u043d\u043e \u0434\u043b\u044f \u0434\u0435\u0431\u0430\u0433\u0430"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"services:\n  chatops:\n    image: registry.gitlab.example.com/test/myubuntu-image:v.0.1\n    command: tail -F /dev/null\n"})}),"\n",(0,s.jsx)(n.h3,{id:"docker-context-remote",children:"Docker context remote"}),"\n",(0,s.jsx)(n.p,{children:"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u0441\u0435\u0440\u0432\u0435\u0440\u0430"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'docker context create vps --docker "host=ssh://me@example.com"\ndocker context use vps\n'})}),"\n",(0,s.jsx)(n.h2,{id:"logging",children:"Logging"}),"\n",(0,s.jsx)(n.h3,{id:"\u043f\u0440\u0438\u043c\u0435\u0440-\u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438",children:"\u041f\u0440\u0438\u043c\u0435\u0440 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'version: \'3.8\'\n\nx-logging:\n  &default-logging\n  driver: "json-file"\n  options:\n    max-size: "1m"\n    max-file: "1"\n    tag: "{{.Name}}"\n\nservices:\n  nginx-app:\n    container_name: nginx-app\n    image: nginx\n    labels:\n      logging: "promtail"\n      logging_jobname: "containerlogs"\n    ports:\n      - 8080:80\n    networks:\n      - app\n    logging: *default-logging\n'})}),"\n",(0,s.jsx)(n.h3,{id:"docker-\u043f\u043b\u0430\u0433\u0438\u043d-\u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f",children:"Docker \u043f\u043b\u0430\u0433\u0438\u043d \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f"}),"\n",(0,s.jsx)(n.p,{children:"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0434\u0440\u0430\u0439\u0432\u0435\u0440\u0430 \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f loki"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker plugin install grafana/loki-docker-driver:latest --alias loki --grant-all\n"})}),"\n",(0,s.jsx)(n.p,{children:"\u041f\u0440\u0438\u043c\u0435\u0440 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 docker-compose \u0441 \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0432 loki"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'services:\n  myservice:\n    image: myimage\n    logging:\n      driver: loki\n      options:\n        loki-url: "http://loki:3100/loki/api/v1/push"\n        loki-external-labels: job=dockerlogs\n'})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>l});var c=r(6540);const s={},o=c.createContext(s);function i(e){const n=c.useContext(o);return c.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),c.createElement(o.Provider,{value:n},e.children)}}}]);