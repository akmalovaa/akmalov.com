"use strict";(self.webpackChunkakmalov_com=self.webpackChunkakmalov_com||[]).push([[7755],{7743:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>t,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>l});const c=JSON.parse('{"id":"docker/commands","title":"Docker commands","description":"\u0427\u0430\u0441\u0442\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b","source":"@site/docs/docker/commands.md","sourceDirName":"docker","slug":"/docker/commands","permalink":"/docs/docker/commands","draft":false,"unlisted":false,"editUrl":"https://github.com/akmalovaa/akmalov.com/tree/main/docs/docker/commands.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Docker commands"},"sidebar":"tutorialSidebar","previous":{"title":"Docker","permalink":"/docs/category/docker"},"next":{"title":"Helm","permalink":"/docs/category/helm"}}');var o=n(4848),s=n(8453);const a={sidebar_position:2,title:"Docker commands"},t=void 0,d={},l=[{value:"Build args",id:"build-args",level:2},{value:"Docker run rm exec",id:"docker-run-rm-exec",level:2},{value:"Docker overlay who use (need install jq)",id:"docker-overlay-who-use-need-install-jq",level:2},{value:"Docker image size",id:"docker-image-size",level:2},{value:"Docker cp",id:"docker-cp",level:2},{value:"Retag for own registory",id:"retag-for-own-registory",level:2},{value:"Docker compose run",id:"docker-compose-run",level:2},{value:"Docker context remote",id:"docker-context-remote",level:2}];function i(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.p,{children:"\u0427\u0430\u0441\u0442\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b"}),"\n",(0,o.jsx)(r.p,{children:"Fast install docker"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-shell",children:"apt update && apt upgrade -y && apt install curl\ncurl -fsSL https://get.docker.com -o get-docker.sh\nsudo sh get-docker.sh\n"})}),"\n",(0,o.jsx)(r.p,{children:"Docker run exec or have entry point use: --entry-point=/bin/bash"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-bash",children:"docker run --rm -it image-name sh\n"})}),"\n",(0,o.jsx)(r.h2,{id:"build-args",children:"Build args"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-bash",children:"docker build . -t myimage --build-arg USER=$USER --build-arg PASSWORD=$PASSWORD\n"})}),"\n",(0,o.jsx)(r.h2,{id:"docker-run-rm-exec",children:"Docker run rm exec"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{children:"docker run --rm -it tg_webhook_exporter bash\n"})}),"\n",(0,o.jsx)(r.h2,{id:"docker-overlay-who-use-need-install-jq",children:"Docker overlay who use (need install jq)"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-bash",children:" docker inspect $(docker ps -qa) |  jq -r 'map([.Name, .GraphDriver.Data.MergedDir]) | .[] | \"\\(.[0])\\t\\(.[1])\"'\n"})}),"\n",(0,o.jsx)(r.h2,{id:"docker-image-size",children:"Docker image size"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-bash",children:"docker ps --format '{{.Names}}\\n{{.Image}}:{{.Size}}\\n' -s\n"})}),"\n",(0,o.jsx)(r.h2,{id:"docker-cp",children:"Docker cp"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-bash",children:"docker cp <containerId>:/file/path/within/container /host/path/target\n"})}),"\n",(0,o.jsx)(r.h2,{id:"retag-for-own-registory",children:"Retag for own registory"}),"\n",(0,o.jsx)(r.p,{children:"\u0421\u043a\u0430\u0447\u0430\u0442\u044c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0439 image docker pull"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-bash",children:"docker pull nginx:1.23.1\n"})}),"\n",(0,o.jsx)(r.p,{children:"\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c tag"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-bash",children:"docker tag nginx:1.23.1 registry.gitlab.example.com/test/nginx:1.23.1\n"})}),"\n",(0,o.jsx)(r.p,{children:"Push \u0432 \u0430\u0440\u0442\u0438\u0444\u0430\u043a\u0442\u043e\u0440\u0438"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-bash",children:"docker push registry.gitlab.example.com/test/nginx:1.23.1\n"})}),"\n",(0,o.jsx)(r.h2,{id:"docker-compose-run",children:"Docker compose run"}),"\n",(0,o.jsx)(r.p,{children:"\u0417\u0430\u043f\u0443\u0441\u043a \u0442\u0443\u043f\u043e\u0439 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0447\u0442\u043e\u0431 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u043d\u0435 \u043f\u0430\u0434\u0430\u043b, \u0438\u043d\u043e\u0433\u0434\u0430 \u0431\u044b\u0432\u0430\u0435\u0442 \u043d\u0443\u0436\u043d\u043e \u0434\u043b\u044f \u0434\u0435\u0431\u0430\u0433\u0430"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-yaml",children:"services:\n  chatops:\n    image: registry.gitlab.example.com/test/myubuntu-image:v.0.1\n    command: tail -F /dev/null\n"})}),"\n",(0,o.jsx)(r.h2,{id:"docker-context-remote",children:"Docker context remote"}),"\n",(0,o.jsx)(r.p,{children:"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u0441\u0435\u0440\u0432\u0435\u0440\u0430"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-bash",children:'docker context create vps --docker "host=ssh://me@example.com"\ndocker context use vps\n'})})]})}function m(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(i,{...e})}):i(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>t});var c=n(6540);const o={},s=c.createContext(o);function a(e){const r=c.useContext(s);return c.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),c.createElement(s.Provider,{value:r},e.children)}}}]);